{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoServiceService {\n  constructor(apiUrl, http) {\n    this.apiUrl = apiUrl;\n    this.http = http;\n    this.todosSubject = new BehaviorSubject([]);\n    this.todos$ = this.todosSubject.asObservable();\n  }\n  getTodos() {\n    this.http.get(this.apiUrl + 'GetTodos').subscribe(res => {\n      this.todosSubject.next(res);\n    });\n  }\n  getTodoItem(id) {\n    this.http.get(this.apiUrl + 'GetTodo/' + id).subscribe(res => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos[index] = res;\n    });\n  }\n  addTodoItem(todoItem) {\n    this.http.post(this.apiUrl + 'CreateTodo', todoItem).subscribe(res => {\n      this.todos.push(res);\n    });\n  }\n  deleteTodoItem(id) {\n    this.http.delete(this.apiUrl + 'DeleteTodo/' + id).subscribe(res => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos.splice(index, 1);\n    });\n  }\n  updateTodoItem(id, todoItem) {\n    this.http.put(this.apiUrl + 'UpdateTodo/' + id, todoItem).subscribe(res => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos[index] = res;\n    });\n  }\n}\nTodoServiceService.ɵfac = function TodoServiceService_Factory(t) {\n  return new (t || TodoServiceService)(i0.ɵɵinject('apiUrl'), i0.ɵɵinject(i1.HttpClient));\n};\nTodoServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TodoServiceService,\n  factory: TodoServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","TodoServiceService","constructor","apiUrl","http","todosSubject","todos$","asObservable","getTodos","get","subscribe","res","next","getTodoItem","id","index","todos","findIndex","t","addTodoItem","todoItem","post","push","deleteTodoItem","delete","splice","updateTodoItem","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\TrialProjects\\CardAppRecap\\src\\app\\Services\\todo-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { TodoItem } from '../Models/todo-item';\nimport { TodoCreateItem } from '../Models/todo-create-item';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoServiceService {\n\n  private todosSubject = new BehaviorSubject<TodoItem[]>([]);\n  public todos$ = this.todosSubject.asObservable();\n\n  constructor(\n    @Inject('apiUrl') private apiUrl: string,\n    private http: HttpClient\n  ) { }\n\n  todos: TodoItem[];\n\n  getTodos(): void {\n    this.http.get<TodoItem[]>(this.apiUrl + 'GetTodos')\n      .subscribe((res: TodoItem[]) => {\n        this.todosSubject.next(res); \n      });\n  }\n\n  getTodoItem(id: number):void {\n    this.http.get<TodoItem>(this.apiUrl + 'GetTodo/' + id)\n    .subscribe((res: TodoItem) => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos[index] = res;\n    });\n  }\n\n  addTodoItem(todoItem: TodoCreateItem):void {\n    this.http.post<TodoItem>(this.apiUrl + 'CreateTodo', todoItem)\n    .subscribe((res: TodoItem) => {\n      this.todos.push(res);\n    });\n  }\n\n  deleteTodoItem(id: number):void {\n    this.http.delete<TodoItem>(this.apiUrl + 'DeleteTodo/' + id)\n    .subscribe((res: TodoItem) => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos.splice(index, 1);\n    });\n  }\n\n  updateTodoItem(id:number,todoItem: TodoItem):void {\n    this.http.put<TodoItem>(this.apiUrl + 'UpdateTodo/' + id, todoItem)\n    .subscribe((res: TodoItem) => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos[index] = res;\n    });\n  }\n\n\n}\n"],"mappings":"AAIA,SAASA,eAAe,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,kBAAkB;EAK7BC,YAC4BC,MAAc,EAChCC,IAAgB;IADE,KAAAD,MAAM,GAANA,MAAM;IACxB,KAAAC,IAAI,GAAJA,IAAI;IALN,KAAAC,YAAY,GAAG,IAAIL,eAAe,CAAa,EAAE,CAAC;IACnD,KAAAM,MAAM,GAAG,IAAI,CAACD,YAAY,CAACE,YAAY,EAAE;EAK5C;EAIJC,QAAQA,CAAA;IACN,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAa,IAAI,CAACN,MAAM,GAAG,UAAU,CAAC,CAChDO,SAAS,CAAEC,GAAe,IAAI;MAC7B,IAAI,CAACN,YAAY,CAACO,IAAI,CAACD,GAAG,CAAC;IAC7B,CAAC,CAAC;EACN;EAEAE,WAAWA,CAACC,EAAU;IACpB,IAAI,CAACV,IAAI,CAACK,GAAG,CAAW,IAAI,CAACN,MAAM,GAAG,UAAU,GAAGW,EAAE,CAAC,CACrDJ,SAAS,CAAEC,GAAa,IAAI;MAC3B,IAAII,KAAK,GAAG,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,IAAIH,GAAG,CAACG,EAAE,CAAC;MACrD,IAAI,CAACE,KAAK,CAACD,KAAK,CAAC,GAAGJ,GAAG;IACzB,CAAC,CAAC;EACJ;EAEAQ,WAAWA,CAACC,QAAwB;IAClC,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAW,IAAI,CAAClB,MAAM,GAAG,YAAY,EAAEiB,QAAQ,CAAC,CAC7DV,SAAS,CAAEC,GAAa,IAAI;MAC3B,IAAI,CAACK,KAAK,CAACM,IAAI,CAACX,GAAG,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAY,cAAcA,CAACT,EAAU;IACvB,IAAI,CAACV,IAAI,CAACoB,MAAM,CAAW,IAAI,CAACrB,MAAM,GAAG,aAAa,GAAGW,EAAE,CAAC,CAC3DJ,SAAS,CAAEC,GAAa,IAAI;MAC3B,IAAII,KAAK,GAAG,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,IAAIH,GAAG,CAACG,EAAE,CAAC;MACrD,IAAI,CAACE,KAAK,CAACS,MAAM,CAACV,KAAK,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC;EACJ;EAEAW,cAAcA,CAACZ,EAAS,EAACM,QAAkB;IACzC,IAAI,CAAChB,IAAI,CAACuB,GAAG,CAAW,IAAI,CAACxB,MAAM,GAAG,aAAa,GAAGW,EAAE,EAAEM,QAAQ,CAAC,CAClEV,SAAS,CAAEC,GAAa,IAAI;MAC3B,IAAII,KAAK,GAAG,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,IAAIH,GAAG,CAACG,EAAE,CAAC;MACrD,IAAI,CAACE,KAAK,CAACD,KAAK,CAAC,GAAGJ,GAAG;IACzB,CAAC,CAAC;EACJ;;AAhDWV,kBAAkB,C;mBAAlBA,kBAAkB,EAAA2B,EAAA,CAAAC,QAAA,CAMnB,QAAQ,GAAAD,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AANP9B,kBAAkB,C;SAAlBA,kBAAkB;EAAA+B,OAAA,EAAlB/B,kBAAkB,CAAAgC,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}