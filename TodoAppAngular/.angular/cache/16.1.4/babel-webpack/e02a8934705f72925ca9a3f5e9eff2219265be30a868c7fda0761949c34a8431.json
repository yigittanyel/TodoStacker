{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoServiceService {\n  constructor(apiUrl, http) {\n    this.apiUrl = apiUrl;\n    this.http = http;\n  }\n  getTodos() {\n    this.http.get(this.apiUrl + 'GetTodos').subscribe(res => {\n      this.todos = res;\n    });\n  }\n  getTodoItem(id) {\n    this.http.get(this.apiUrl + 'GetTodo/' + id).subscribe(res => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos[index] = res;\n    });\n  }\n  addTodoItem(todoItem) {\n    this.http.post(this.apiUrl + 'CreateTodo', todoItem).subscribe(res => {\n      this.todos.push(res);\n    });\n  }\n  deleteTodoItem(id) {\n    this.http.delete(this.apiUrl + 'DeleteTodo/' + id).subscribe(res => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos.splice(index, 1);\n    });\n  }\n  updateTodoItem(id, todoItem) {\n    this.http.put(this.apiUrl + 'UpdateTodo/' + id, todoItem).subscribe(res => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos[index] = res;\n    });\n  }\n}\nTodoServiceService.ɵfac = function TodoServiceService_Factory(t) {\n  return new (t || TodoServiceService)(i0.ɵɵinject('apiUrl'), i0.ɵɵinject(i1.HttpClient));\n};\nTodoServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TodoServiceService,\n  factory: TodoServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TodoServiceService","constructor","apiUrl","http","getTodos","get","subscribe","res","todos","getTodoItem","id","index","findIndex","t","addTodoItem","todoItem","post","push","deleteTodoItem","delete","splice","updateTodoItem","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\TrialProjects\\CardAppRecap\\src\\app\\Services\\todo-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { TodoItem } from '../Models/todo-item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoServiceService {\n\n  constructor(\n    @Inject('apiUrl') private apiUrl: string,\n    private http: HttpClient\n  ) { }\n\n  todos!: TodoItem[];\n\n  getTodos():void {\n     this.http.get<TodoItem[]>(this.apiUrl + 'GetTodos')\n     .subscribe((res: TodoItem[]) => {\n      this.todos = res;\n    });\n  }\n\n  getTodoItem(id: number):void {\n    this.http.get<TodoItem>(this.apiUrl + 'GetTodo/' + id)\n    .subscribe((res: TodoItem) => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos[index] = res;\n    });\n  }\n\n  addTodoItem(todoItem: TodoItem):void {\n    this.http.post<TodoItem>(this.apiUrl + 'CreateTodo', todoItem)\n    .subscribe((res: TodoItem) => {\n      this.todos.push(res);\n    });\n  }\n\n  deleteTodoItem(id: number):void {\n    this.http.delete<TodoItem>(this.apiUrl + 'DeleteTodo/' + id)\n    .subscribe((res: TodoItem) => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos.splice(index, 1);\n    });\n  }\n\n  updateTodoItem(id:number,todoItem: TodoItem):void {\n    this.http.put<TodoItem>(this.apiUrl + 'UpdateTodo/' + id, todoItem)\n    .subscribe((res: TodoItem) => {\n      let index = this.todos.findIndex(t => t.id == res.id);\n      this.todos[index] = res;\n    });\n  }\n\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,kBAAkB;EAE7BC,YAC4BC,MAAc,EAChCC,IAAgB;IADE,KAAAD,MAAM,GAANA,MAAM;IACxB,KAAAC,IAAI,GAAJA,IAAI;EACV;EAIJC,QAAQA,CAAA;IACL,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACH,MAAM,GAAG,UAAU,CAAC,CAClDI,SAAS,CAAEC,GAAe,IAAI;MAC9B,IAAI,CAACC,KAAK,GAAGD,GAAG;IAClB,CAAC,CAAC;EACJ;EAEAE,WAAWA,CAACC,EAAU;IACpB,IAAI,CAACP,IAAI,CAACE,GAAG,CAAW,IAAI,CAACH,MAAM,GAAG,UAAU,GAAGQ,EAAE,CAAC,CACrDJ,SAAS,CAAEC,GAAa,IAAI;MAC3B,IAAII,KAAK,GAAG,IAAI,CAACH,KAAK,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,IAAIH,GAAG,CAACG,EAAE,CAAC;MACrD,IAAI,CAACF,KAAK,CAACG,KAAK,CAAC,GAAGJ,GAAG;IACzB,CAAC,CAAC;EACJ;EAEAO,WAAWA,CAACC,QAAkB;IAC5B,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAW,IAAI,CAACd,MAAM,GAAG,YAAY,EAAEa,QAAQ,CAAC,CAC7DT,SAAS,CAAEC,GAAa,IAAI;MAC3B,IAAI,CAACC,KAAK,CAACS,IAAI,CAACV,GAAG,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAW,cAAcA,CAACR,EAAU;IACvB,IAAI,CAACP,IAAI,CAACgB,MAAM,CAAW,IAAI,CAACjB,MAAM,GAAG,aAAa,GAAGQ,EAAE,CAAC,CAC3DJ,SAAS,CAAEC,GAAa,IAAI;MAC3B,IAAII,KAAK,GAAG,IAAI,CAACH,KAAK,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,IAAIH,GAAG,CAACG,EAAE,CAAC;MACrD,IAAI,CAACF,KAAK,CAACY,MAAM,CAACT,KAAK,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC;EACJ;EAEAU,cAAcA,CAACX,EAAS,EAACK,QAAkB;IACzC,IAAI,CAACZ,IAAI,CAACmB,GAAG,CAAW,IAAI,CAACpB,MAAM,GAAG,aAAa,GAAGQ,EAAE,EAAEK,QAAQ,CAAC,CAClET,SAAS,CAAEC,GAAa,IAAI;MAC3B,IAAII,KAAK,GAAG,IAAI,CAACH,KAAK,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,IAAIH,GAAG,CAACG,EAAE,CAAC;MACrD,IAAI,CAACF,KAAK,CAACG,KAAK,CAAC,GAAGJ,GAAG;IACzB,CAAC,CAAC;EACJ;;AA7CWP,kBAAkB,C;mBAAlBA,kBAAkB,EAAAuB,EAAA,CAAAC,QAAA,CAGnB,QAAQ,GAAAD,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAHP1B,kBAAkB,C;SAAlBA,kBAAkB;EAAA2B,OAAA,EAAlB3B,kBAAkB,CAAA4B,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}